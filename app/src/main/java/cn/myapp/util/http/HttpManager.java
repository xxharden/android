/**
 * Generated by SFJ 1.0.0.558
 * Copyright (C) 2014 imoco.org
 */

package cn.myapp.util.http;

import java.io.File;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class HttpManager {

	public enum E_HTTP_TYPE {
		GET, POST
	}

	private static volatile HttpManager httpManager;
	private ExecutorService httpService;

	public ExecutorService getHttpService() {
		return httpService;
	}

	public void setHttpService(ExecutorService httpService) {
		this.httpService = httpService;
	}

	private HttpManager() {
		httpService = Executors.newSingleThreadScheduledExecutor();
	}

	public static HttpManager getInstance() {
		synchronized (HttpManager.class) {
			if (httpManager == null) {
				httpManager = new HttpManager();
			}
		}
		return httpManager;
	}

	private void requestGet(String url, String loadingMsg,
			E_HTTP_TYPE mHttp_TYPE, HttpCallBack callBack) {
		HttpRequest request = new HttpRequest(url, loadingMsg, mHttp_TYPE,
				callBack);
		request.load();
	}

	private void requestPost(String url, String _loadingMsg,
			E_HTTP_TYPE http_TYPE, Map<String, String> params,
			HttpCallBack callback) {
		HttpRequest request = new HttpRequest(url, _loadingMsg, http_TYPE,
				params, callback);
		request.load();
	}

	private void requestPost(String url, String _loadingMsg,
			E_HTTP_TYPE http_TYPE, Map<String, String> params,
			Map<String, File> files, HttpCallBack callback) {
		HttpRequest request = new HttpRequest(url, _loadingMsg, http_TYPE,
				params, files, callback);
		request.load();
	}

	public void requestGet(String url, String loadingMsg, HttpCallBack callBack) {
		requestGet(url, loadingMsg, E_HTTP_TYPE.GET, callBack);
	}

	public void requestPost(String url, String _loadingMsg,
			Map<String, String> params, HttpCallBack callback) {
		requestPost(url, _loadingMsg, E_HTTP_TYPE.POST, params, callback);
	}

	public void requestPost(String url, String _loadingMsg,
			Map<String, String> params, Map<String, File> files,
			HttpCallBack callback) {
		requestPost(url, _loadingMsg, E_HTTP_TYPE.POST, params, files, callback);
	}

}
